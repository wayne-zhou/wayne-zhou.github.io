<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Notes</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://wayne-zhou.github.io/"/>
  <updated>2017-12-08T07:46:21.799Z</updated>
  <id>https://wayne-zhou.github.io/</id>
  
  <author>
    <name>wayne-zhou</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>mongoDB语法笔记</title>
    <link href="https://wayne-zhou.github.io/2017/12/08/mongoDB/"/>
    <id>https://wayne-zhou.github.io/2017/12/08/mongoDB/</id>
    <published>2017-12-08T05:56:51.000Z</published>
    <updated>2017-12-08T07:46:21.799Z</updated>
    
    <content type="html"><![CDATA[<h2 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#进入mongoDB下的bin文件, 可加参数 --port 20000 --auth      auth表示开始鉴权</span></span><br><span class="line">mongod.exe --dbpath <span class="string">"F:\ProgramFiles2\mongoDB\db"</span></span><br><span class="line"></span><br><span class="line">执行mongo.exe</span><br></pre></td></tr></table></figure><h2 id="创建db"><a href="#创建db" class="headerlink" title="创建db"></a>创建db</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#创建名为mydb的数据库，如果该数据库存在，则切换到这个数据库</span></span><br><span class="line">use mydb</span><br><span class="line"><span class="comment">#检查当前选定的数据库</span></span><br><span class="line">db</span><br><span class="line"><span class="comment">#检查数据库列表，空的数据库不显示</span></span><br><span class="line">show dbs</span><br><span class="line">删除当前所在的数据库</span><br><span class="line">db.dropDatabase()</span><br></pre></td></tr></table></figure><h2 id="创建用户"><a href="#创建用户" class="headerlink" title="创建用户"></a>创建用户</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查看用户,在admin库</span></span><br><span class="line">db.system.users.find()</span><br><span class="line"><span class="comment">#创建用户,admin库创建root用户</span></span><br><span class="line">db.createUser(&#123;user:<span class="string">"root"</span>,<span class="built_in">pwd</span>:<span class="string">"123456"</span>,roles:[<span class="string">"userAdminAnyDatabase"</span>]&#125;)</span><br><span class="line"><span class="comment">#登录root用户</span></span><br><span class="line">db.auth(<span class="string">"root"</span>,<span class="string">"123456"</span>)  </span><br><span class="line"><span class="comment">#创建可执行js的角色：</span></span><br><span class="line">db.createRole(&#123;role:<span class="string">'sysadmin'</span>,roles:[],privileges:[&#123;resource:&#123;anyResource:<span class="literal">true</span>&#125;,actions:[<span class="string">'anyAction'</span>]&#125;]&#125;)  </span><br><span class="line"><span class="comment">#其它库创建用户，首先以用户管理员的身份登录 admin 数据库。然后用 use 命令切换到目标数据库，同样用 db.createUser() 命令来创建用户，其中角色名为 read 和 readWrite</span></span><br><span class="line"><span class="comment">#testy用户追加权限执行js权限</span></span><br><span class="line">db.grantRolesToUser(<span class="string">"test"</span>, [&#123;role:<span class="string">"sysadmin"</span>, db:<span class="string">"admin"</span>&#125;] )</span><br><span class="line"><span class="comment">#更新权限</span></span><br><span class="line">db.updateUser()</span><br><span class="line"><span class="comment">#删除权限</span></span><br><span class="line">db.revokeRolesFromUser()</span><br></pre></td></tr></table></figure><h2 id="创建集合"><a href="#创建集合" class="headerlink" title="创建集合"></a>创建集合</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#创建一个movie的集合</span></span><br><span class="line">db.createCollection(<span class="string">'movie'</span>)</span><br><span class="line"><span class="comment">#查看当前库的集合</span></span><br><span class="line">db.getCollectionNames()</span><br><span class="line"><span class="comment">#删除movie的集合</span></span><br><span class="line">db.movie.drop()</span><br></pre></td></tr></table></figure><h2 id="新增"><a href="#新增" class="headerlink" title="新增"></a>新增</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#movie的集合中插入一条数据</span></span><br><span class="line">db.movie.insert(&#123;&#125;)</span><br><span class="line"><span class="comment">#movie的集合中插入多条数据</span></span><br><span class="line">db.movie.insert([&#123;&#125;,&#123;&#125;])</span><br></pre></td></tr></table></figure><h2 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查询movie的集合，pretty()输出的是格式化后的</span></span><br><span class="line">db.movie.find().pretty()</span><br><span class="line"><span class="comment">##根据key1和key2的条件过滤, &amp;&amp;关系</span></span><br><span class="line">db.movie.find(&#123;key1:<span class="string">'value1'</span>, key2:<span class="string">'value2'</span>&#125;).pretty()</span><br><span class="line"><span class="comment">#根据key1或key2的条件过滤,||的关系过滤</span></span><br><span class="line">db.movie.find(&#123;<span class="variable">$or</span>:[&#123;key1:<span class="string">'value1'</span>&#125;,&#123;key1:<span class="string">'value2'</span>&#125;]&#125;).pretty()</span><br><span class="line"><span class="comment">#条件key1大于num</span></span><br><span class="line">db.movie.find(&#123;key1:&#123;<span class="variable">$gt</span>:num&#125;&#125;).pretty()   <span class="comment">#$lt小于,$get大于等于,$let小于等于</span></span><br><span class="line"><span class="comment">#按磁盘存储顺序返回第一个</span></span><br><span class="line">db.movie.findOne(&#123;key1:<span class="string">'value1'</span>&#125;)</span><br><span class="line"><span class="comment">#skip表示从第几(0)个开始,limit输出几个   </span></span><br><span class="line">db.movie.find().skip(1).<span class="built_in">limit</span>(2).pretty()</span><br><span class="line"><span class="comment">#第一个是过滤参数，第二个表示返回字段，1表示要返回，而0则表示不返回，默认0</span></span><br><span class="line">db.movie.find(&#123;key1:<span class="string">'value'</span>&#125;,&#123;<span class="string">'key1'</span>:1,<span class="string">'key2'</span>:1&#125;).pretty()</span><br></pre></td></tr></table></figure><h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#key1条件，key2更新字段,默认更新第一个。key2不存在时新增key2字段</span></span><br><span class="line">db.movie.update(&#123;key1:<span class="string">'value1'</span>&#125;, &#123;<span class="variable">$set</span>:&#123;key2:value2&#125;&#125;)</span><br><span class="line"><span class="comment">#key2自增加num,多记录默认更新第一个</span></span><br><span class="line">db.movie.update(&#123;key1:<span class="string">'value1'</span>&#125;, &#123;<span class="variable">$inc</span>:&#123;key2:num&#125;&#125;)</span><br><span class="line"><span class="comment">#符合条件的都更新</span></span><br><span class="line">db.movie.update(&#123;&#125;, &#123;<span class="variable">$inc</span>:&#123;key2:num&#125;&#125;,&#123;multi:<span class="literal">true</span>&#125;)</span><br><span class="line"><span class="comment">#符合key1条件的记录中key2的值追加value2</span></span><br><span class="line">db.movie.update(&#123;key1:<span class="string">'value1'</span>&#125;, &#123;<span class="variable">$push</span>:&#123;key2:<span class="string">'value2'</span>&#125;&#125;)</span><br></pre></td></tr></table></figure><h2 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#删除movie集合</span></span><br><span class="line">db.movie.remove()</span><br><span class="line"><span class="comment">#删除符合key1条件的所有记录</span></span><br><span class="line">db.movie.remove(&#123;key1:<span class="string">'value1'</span>&#125;)</span><br><span class="line"><span class="comment">#删除符合key1条件的第一条记录</span></span><br><span class="line">db.movie.remove(&#123;key1:<span class="string">'value1'</span>&#125;,1)</span><br></pre></td></tr></table></figure><h2 id="索引和排序"><a href="#索引和排序" class="headerlink" title="索引和排序"></a>索引和排序</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#key1加上升序索引,-1为降序</span></span><br><span class="line">db.movie.ensureIndex(&#123;key1:1&#125;)</span><br><span class="line"><span class="comment">#key1加上text索引，用于文本搜索</span></span><br><span class="line">db.movie.ensureIndex(&#123;key1:<span class="string">'text'</span>&#125;)</span><br><span class="line"><span class="comment">#过滤文本中含有aaa的</span></span><br><span class="line">db.movie.find(&#123;<span class="variable">$text</span>:&#123;<span class="variable">$search</span>:<span class="string">"aaa"</span>&#125;&#125;).pretty()</span><br><span class="line"><span class="comment">#返回movie的所有索引</span></span><br><span class="line">db.movie.getIndexes()</span><br><span class="line"><span class="comment">#删除key1的索引</span></span><br><span class="line">db.movie.dropIndex(<span class="string">'key1'</span>)</span><br><span class="line"><span class="comment">#按照key1升序，-1为降序</span></span><br><span class="line">db.movie.find().sort(&#123;<span class="string">'key1'</span>:1&#125;).pretty()</span><br></pre></td></tr></table></figure><h2 id="聚合"><a href="#聚合" class="headerlink" title="聚合"></a>聚合</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#按照key1分组后求和key2。$avg、$first、$last、$max、$min</span></span><br><span class="line">db.movie.aggregate([&#123;<span class="variable">$group</span>:&#123;name1:<span class="string">'$key1'</span>,num2:&#123;<span class="variable">$sum</span>:<span class="string">'$key2'</span>&#125;&#125;&#125;])</span><br></pre></td></tr></table></figure><h2 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#过滤key1中含有b的，区分大小写</span></span><br><span class="line">db.movie.find(&#123;key1:&#123;<span class="variable">$regex</span>:<span class="string">'.*b'</span>&#125;&#125;).pretty()</span><br><span class="line"><span class="comment">#不区分大小写</span></span><br><span class="line">db.movie.find(&#123;key1:&#123;<span class="variable">$regex</span>:<span class="string">'.*b$'</span>,<span class="variable">$options</span>:<span class="string">'$i'</span>&#125;&#125;).pretty()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;启动&quot;&gt;&lt;a href=&quot;#启动&quot; class=&quot;headerlink&quot; title=&quot;启动&quot;&gt;&lt;/a&gt;启动&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span c
      
    
    </summary>
    
      <category term="notes" scheme="https://wayne-zhou.github.io/categories/notes/"/>
    
    
      <category term="mongo" scheme="https://wayne-zhou.github.io/tags/mongo/"/>
    
  </entry>
  
  <entry>
    <title>java-IO流</title>
    <link href="https://wayne-zhou.github.io/2017/10/04/java-IO%E6%B5%81/"/>
    <id>https://wayne-zhou.github.io/2017/10/04/java-IO流/</id>
    <published>2017-10-04T14:30:44.000Z</published>
    <updated>2017-12-08T02:26:53.714Z</updated>
    
    <content type="html"><![CDATA[<h2 id="java-字节流、字符流"><a href="#java-字节流、字符流" class="headerlink" title="java-字节流、字符流"></a>java-字节流、字符流</h2><p><img src="http://owmgw53q0.bkt.clouddn.com/iimage/gitPages/java-IO.bmp" alt="java-IO流"></p><h2 id="Java对BIO、NIO、AIO的支持"><a href="#Java对BIO、NIO、AIO的支持" class="headerlink" title="Java对BIO、NIO、AIO的支持"></a>Java对BIO、NIO、AIO的支持</h2><h3 id="Java-BIO"><a href="#Java-BIO" class="headerlink" title="Java BIO"></a>Java BIO</h3><p>同步并阻塞，服务器实现模式为一个连接一个线程，即客户端有连接请求时服务器端就需要启动一个线程进行处理，如果这个连接不做任何事情会造成不必要的线程开销，当然可以通过线程池机制改善，jdk1.4之前只有该模式。</p><h3 id="Java-NIO"><a href="#Java-NIO" class="headerlink" title="Java NIO"></a>Java NIO</h3><p>同步非阻塞，服务器实现模式为一个请求一个线程，即客户端发送的连接请求都会注册到多路复用器上，多路复用器轮询到连接有I/O请求时才启动一个线程进行处理。Channels 、Buffers、Selectors</p><h3 id="Java-AIO-NIO-2"><a href="#Java-AIO-NIO-2" class="headerlink" title="Java AIO(NIO.2)"></a>Java AIO(NIO.2)</h3><p> 异步非阻塞，服务器实现模式为一个有效请求一个线程，客户端的I/O请求都是由OS先完成了再通知服务器应用去启动线程进行处理。进行读写操作时，只须直接调用API的read或write方法即可，read/write方法都是异步的，完成后会主动调用回调函数。  在JDK1.7中，这部分内容被称作NIO.2，主要在java.nio.channels包下</p><h2 id="BIO、NIO、AIO适用场景分析"><a href="#BIO、NIO、AIO适用场景分析" class="headerlink" title="BIO、NIO、AIO适用场景分析"></a>BIO、NIO、AIO适用场景分析</h2><ul><li>BIO方式适用于连接数目比较小且固定的架构，这种方式对服务器资源要求比较高，并发局限于应用中，JDK1.4以前的唯一选择，但程序直观简单易理解。 </li><li>NIO方式适用于连接数目多且连接比较短（轻操作）的架构，比如聊天服务器，并发局限于应用中，编程比较复杂，JDK1.4开始支持。    </li><li>AIO方式使用于连接数目多且连接比较长（重操作）的架构，比如相册服务器，充分调用OS参与并发操作，编程比较复杂，JDK7开始支持。</li></ul><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="http://blog.csdn.net/skiof007/article/details/52873421" target="_blank" rel="noopener">http://blog.csdn.net/skiof007/article/details/52873421</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;java-字节流、字符流&quot;&gt;&lt;a href=&quot;#java-字节流、字符流&quot; class=&quot;headerlink&quot; title=&quot;java-字节流、字符流&quot;&gt;&lt;/a&gt;java-字节流、字符流&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://owmgw53q0.bkt
      
    
    </summary>
    
      <category term="Java" scheme="https://wayne-zhou.github.io/categories/Java/"/>
    
    
      <category term="Java" scheme="https://wayne-zhou.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Java-UML导图</title>
    <link href="https://wayne-zhou.github.io/2017/09/24/Java-UML%E5%AF%BC%E5%9B%BE/"/>
    <id>https://wayne-zhou.github.io/2017/09/24/Java-UML导图/</id>
    <published>2017-09-23T16:32:18.000Z</published>
    <updated>2017-12-08T02:26:53.759Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Java-UML导图："><a href="#Java-UML导图：" class="headerlink" title="Java UML导图："></a>Java UML导图：</h2><p><img src="http://owmgw53q0.bkt.clouddn.com/image/gitPages/java_uml.png" alt="Java UML导图"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Java-UML导图：&quot;&gt;&lt;a href=&quot;#Java-UML导图：&quot; class=&quot;headerlink&quot; title=&quot;Java UML导图：&quot;&gt;&lt;/a&gt;Java UML导图：&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://owmgw53q0.bkt.clo
      
    
    </summary>
    
      <category term="Java" scheme="https://wayne-zhou.github.io/categories/Java/"/>
    
    
      <category term="Java" scheme="https://wayne-zhou.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>GitHub+Hexo+Next搭建个人博客笔记</title>
    <link href="https://wayne-zhou.github.io/2017/09/23/GitHubPages/"/>
    <id>https://wayne-zhou.github.io/2017/09/23/GitHubPages/</id>
    <published>2017-09-23T15:09:28.000Z</published>
    <updated>2017-12-08T02:26:53.665Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Git步骤"><a href="#Git步骤" class="headerlink" title="Git步骤"></a>Git步骤</h2><ul><li>通过Git bash进入要建仓库的文件夹</li><li><p>把当前的目录变成可以管理的git仓库，生成隐藏.git文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure></li><li><p>指定用户名和邮箱</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config  --global user.name <span class="string">"gitName"</span></span><br><span class="line">git config  --global user.email <span class="string">"gitEmail"</span></span><br></pre></td></tr></table></figure></li><li><p>生成SHK</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#先查看有没有生成过</span></span><br><span class="line"><span class="built_in">cd</span> ~/.ssh</span><br><span class="line">ls</span><br><span class="line"><span class="comment">#有就直接用</span></span><br><span class="line"><span class="comment">#没有命令生成</span></span><br><span class="line">ssh-keygen  -t rsa –C  <span class="string">"gitEmail"</span></span><br><span class="line"><span class="comment">#复制id_rsa.pub到Settings→SSH and GPG keys →New SSH key</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#测试命令</span></span><br><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure></li><li><p>Git常用命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#把XX文件添加到暂存区去，XX写成 . ,表示提交当前目录下所有文件</span></span><br><span class="line">git add XX</span><br><span class="line"></span><br><span class="line"><span class="comment">#提交XX文件</span></span><br><span class="line">git commit –m <span class="string">"注释"</span> XX</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看仓库状态</span></span><br><span class="line">git status</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看XX文件修改了那些内容     </span></span><br><span class="line">git diff  XX</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看历史记录     </span></span><br><span class="line">git <span class="built_in">log</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#查看历史记录的版本号id         </span></span><br><span class="line">git reflog</span><br><span class="line"></span><br><span class="line"><span class="comment">#回退到上一个版本     </span></span><br><span class="line">git reset  --hard HEAD^ 或者 git reset  --hard HEAD~</span><br><span class="line"></span><br><span class="line"><span class="comment">#把XX文件在工作区的修改全部撤销</span></span><br><span class="line">git checkout -- XX</span><br><span class="line"></span><br><span class="line"><span class="comment">#删除XX文件   </span></span><br><span class="line">git rm XX</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建+切换分支</span></span><br><span class="line">git checkout –b name</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看分支</span></span><br><span class="line">git branch</span><br><span class="line"></span><br><span class="line"><span class="comment">#切换分支</span></span><br><span class="line">git checkout name</span><br><span class="line">　　</span><br><span class="line"><span class="comment">#合并某分支到当前分支</span></span><br><span class="line">git merge name</span><br><span class="line"></span><br><span class="line"><span class="comment">#删除分支</span></span><br><span class="line">git branch –d name</span><br><span class="line"></span><br><span class="line"><span class="comment">#删除分支后保留分支信息</span></span><br><span class="line">git merge –no-ff  -m <span class="string">"注释"</span> name</span><br><span class="line">　　</span><br><span class="line"><span class="comment">#删除远程分支</span></span><br><span class="line">git push origin :name</span><br><span class="line"></span><br><span class="line"><span class="comment">#隐藏当前工作现场</span></span><br><span class="line">git stash</span><br><span class="line"></span><br><span class="line"><span class="comment">#回复工作现场,恢复后，stash内容并不删除，需要使用命令 git stash drop 来删除</span></span><br><span class="line">git stash apply</span><br><span class="line"><span class="comment">#另一种方式,恢复的同时把stash内容也删除了</span></span><br><span class="line">git stash pop</span><br><span class="line"></span><br><span class="line"><span class="comment">#关联一个远程库gitUrl, origin是给远程仓库起的别名       </span></span><br><span class="line">git remote add origin gitUrl</span><br><span class="line"></span><br><span class="line"><span class="comment">#把当前master分支推送到远程库</span></span><br><span class="line">git push –u(第一次要用-u 以后不需要) origin master</span><br><span class="line"></span><br><span class="line"><span class="comment">#获取仓库最新代码</span></span><br><span class="line">git pull</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看远程仓库信息</span></span><br><span class="line">git remote –v</span><br><span class="line"></span><br><span class="line"><span class="comment">#取消与远程仓库origin的关联</span></span><br><span class="line">git remote remove origin</span><br><span class="line"></span><br><span class="line"><span class="comment">#推送到远程仓库， master可换位分支名，即推送分支</span></span><br><span class="line">git push origin master</span><br><span class="line"><span class="comment">#强行覆盖远程仓库  </span></span><br><span class="line">git push -f origin master</span><br><span class="line">将本地分支name推送到远程，并在远程创建name分支      </span><br><span class="line">git push origin name:name</span><br><span class="line"></span><br><span class="line"><span class="comment">#从远程库中克隆</span></span><br><span class="line">git <span class="built_in">clone</span> gitUrl</span><br><span class="line"></span><br><span class="line"><span class="comment">#把本地的分支推送到仓库，并在仓库创建对应的分支,name为分支名</span></span><br><span class="line">git branch --<span class="built_in">set</span>-upstream name origin/name</span><br><span class="line"></span><br><span class="line"><span class="comment">#在远程库中克隆分支到本地，并在本地创建对应分支，name为分支名</span></span><br><span class="line">git checkout  –b name origin/name</span><br></pre></td></tr></table></figure></li></ul><h2 id="Hexo步骤"><a href="#Hexo步骤" class="headerlink" title="Hexo步骤"></a>Hexo步骤</h2><ul><li><p>安装Hexo</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure></li><li><p>初始化Hexo</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure></li><li><p>生成Hexo文件结构</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure></li><li><p>配置deploy（修改站点_config.yml中的deploy，修改完后执行）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></li><li><p>插件安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#rss插件： </span></span><br><span class="line">npm install --save hexo-generator-feed</span><br><span class="line"></span><br><span class="line"><span class="comment">#统计插件：</span></span><br><span class="line">npm install hexo-wordcount --save</span><br><span class="line"></span><br><span class="line"><span class="comment">#本地搜索插件：</span></span><br><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure></li></ul><h2 id="Next主题扩展"><a href="#Next主题扩展" class="headerlink" title="Next主题扩展"></a>Next主题扩展</h2><ul><li>站点统计：LeanCloud</li><li>第三方评论：来必力</li><li>图床：七牛云</li></ul><h2 id="软件下载"><a href="#软件下载" class="headerlink" title="软件下载"></a>软件下载</h2><ul><li><a href="https://git-scm.com/download" target="_blank" rel="noopener">git下载地址：</a><br><a href="https://git-scm.com/download" target="_blank" rel="noopener">https://git-scm.com/download</a></li><li><a href="https://tortoisegit.org/download/" target="_blank" rel="noopener">tortoiseGit下载地址：</a><br><a href="https://tortoisegit.org/download/" target="_blank" rel="noopener">https://tortoisegit.org/download/</a></li><li><a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">nodejs下载地址：</a><br><a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">https://nodejs.org/en/download/</a></li></ul><h2 id="文档参考"><a href="#文档参考" class="headerlink" title="文档参考"></a>文档参考</h2><ul><li><a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">HEXO：</a><br><a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">https://hexo.io/zh-cn/docs/</a></li><li><a href="http://theme-next.iissnan.com/getting-started.html" target="_blank" rel="noopener">Next主题：</a><br><a href="http://theme-next.iissnan.com/getting-started.html" target="_blank" rel="noopener">http://theme-next.iissnan.com/getting-started.html</a></li><li><a href="http://shenzekun.cn/hexo%E7%9A%84next%E4%B8%BB%E9%A2%98%E4%B8%AA%E6%80%A7%E5%8C%96%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B.html" target="_blank" rel="noopener">Next个性化配置传送门</a> </li><li><a href="http://blog.csdn.net/github_32886825/article/details/52930195" target="_blank" rel="noopener">Sublime Text编辑MarkDowm参考传送门</a><br>Sublime Text配置常用插件(Package Control 、OmniMarkupPreviewer、IMESupport、spacegray),配置snippet</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Git步骤&quot;&gt;&lt;a href=&quot;#Git步骤&quot; class=&quot;headerlink&quot; title=&quot;Git步骤&quot;&gt;&lt;/a&gt;Git步骤&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;通过Git bash进入要建仓库的文件夹&lt;/li&gt;
&lt;li&gt;&lt;p&gt;把当前的目录变成可以管理的git仓库，
      
    
    </summary>
    
      <category term="notes" scheme="https://wayne-zhou.github.io/categories/notes/"/>
    
    
      <category term="Git" scheme="https://wayne-zhou.github.io/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>Java 反射</title>
    <link href="https://wayne-zhou.github.io/2017/09/21/Java-%E5%8F%8D%E5%B0%84/"/>
    <id>https://wayne-zhou.github.io/2017/09/21/Java-反射/</id>
    <published>2017-09-21T08:16:30.000Z</published>
    <updated>2017-12-08T02:26:53.807Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Java反射总结："><a href="#Java反射总结：" class="headerlink" title="Java反射总结："></a>Java反射总结：</h2><p><img src="http://owmgw53q0.bkt.clouddn.com/image/gitPages/java-fanShe.png" alt="Hexo"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Java反射总结：&quot;&gt;&lt;a href=&quot;#Java反射总结：&quot; class=&quot;headerlink&quot; title=&quot;Java反射总结：&quot;&gt;&lt;/a&gt;Java反射总结：&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://owmgw53q0.bkt.clouddn.com
      
    
    </summary>
    
      <category term="Java" scheme="https://wayne-zhou.github.io/categories/Java/"/>
    
    
      <category term="Java" scheme="https://wayne-zhou.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>markdown常用语法笔记</title>
    <link href="https://wayne-zhou.github.io/2017/09/21/markdown/"/>
    <id>https://wayne-zhou.github.io/2017/09/21/markdown/</id>
    <published>2017-09-21T08:16:30.000Z</published>
    <updated>2017-12-08T05:58:55.009Z</updated>
    
    <content type="html"><![CDATA[<h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 一级标题</span><br><span class="line">## 二级标题</span><br><span class="line">…………</span><br><span class="line">###### 六级标题</span><br></pre></td></tr></table></figure><h2 id="粗体"><a href="#粗体" class="headerlink" title="粗体"></a>粗体</h2><p><strong>粗体</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">**粗体**</span><br></pre></td></tr></table></figure></p><h2 id="斜体"><a href="#斜体" class="headerlink" title="斜体"></a>斜体</h2><p><em>斜体</em></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*斜体*</span><br></pre></td></tr></table></figure><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><blockquote><p>引用</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;引用</span><br></pre></td></tr></table></figure><h2 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h2><ul><li>a</li><li>b</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">* a</span><br><span class="line">* b</span><br></pre></td></tr></table></figure><h2 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h2><ol><li>a</li><li>b</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1. a</span><br><span class="line">2. b</span><br></pre></td></tr></table></figure><h2 id="直接连接"><a href="#直接连接" class="headerlink" title="直接连接"></a>直接连接</h2><p><a href="http://baidu.com" target="_blank" rel="noopener">http://baidu.com</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;http://baidu.com&gt;</span><br></pre></td></tr></table></figure><h2 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h2><p><a href="http://baidu.com" target="_blank" rel="noopener">百度</a></p><p><a href="http://baidu.com" target="_blank" rel="noopener">百度</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[百度](http://baidu.com)</span><br><span class="line"></span><br><span class="line">[百度][baidu_url]</span><br><span class="line">[baidu_url]:http://baidu.com</span><br></pre></td></tr></table></figure><h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><p><img src="http://mouapp.com/Mou_128.png" alt="test"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![test](http://mouapp.com/Mou_128.png)</span><br></pre></td></tr></table></figure><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><table><thead><tr><th>标题1</th><th style="text-align:left">标题2</th><th style="text-align:right">标题3</th><th style="text-align:center">标题4</th></tr></thead><tbody><tr><td>默认1</td><td style="text-align:left">左对齐1</td><td style="text-align:right">右对齐1</td><td style="text-align:center">居中1</td></tr><tr><td>默认2</td><td style="text-align:left">左对齐2</td><td style="text-align:right">右对齐2</td><td style="text-align:center">居中2</td></tr></tbody></table><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">| 标题1      |  标题2    |  标题3    | 标题4   |</span><br><span class="line">| ----- ---- | :--------- | ----------: | :------: |</span><br><span class="line">| 默认1    | 左对齐1 | 右对齐1 | 居中1 |</span><br><span class="line">| 默认2    | 左对齐2 | 右对齐2 | 居中2 |</span><br></pre></td></tr></table></figure><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="http://www.appinn.com/markdown/#html" target="_blank" rel="noopener">http://www.appinn.com/markdown/#html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;标题&quot;&gt;&lt;a href=&quot;#标题&quot; class=&quot;headerlink&quot; title=&quot;标题&quot;&gt;&lt;/a&gt;标题&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span 
      
    
    </summary>
    
      <category term="notes" scheme="https://wayne-zhou.github.io/categories/notes/"/>
    
    
      <category term="markdown" scheme="https://wayne-zhou.github.io/tags/markdown/"/>
    
  </entry>
  
</feed>
